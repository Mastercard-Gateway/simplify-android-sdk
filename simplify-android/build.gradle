apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'


android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionName libraryVersionName

        consumerProguardFiles 'proguard.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug
        release
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

// define an 'optional'
configurations {
    optional
    implementation.extendsFrom optional
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha03'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.google.code.gson:gson:2.8.2'

    // optional for android pay
    optional 'androidx.legacy:legacy-support-v4:1.0.0'
    optional 'com.google.android.gms:play-services-wallet:16.0.1'

    // optional for rxjava
    optional 'io.reactivex.rxjava2:rxjava:2.2.6'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.4'
}

task androidJavadocs(type: Javadoc) {
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.getCompileClasspath(null)
        }
    }
    source = android.sourceSets.main.java.srcDirs
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId = 'com.simplify'
            artifactId project.name
            version = libraryVersionName

            artifact bundleReleaseAar
            artifact androidJavadocsJar
            artifact androidSourcesJar

            pom.withXml {
                def root = asNode()

                // adds basic info
                root.appendNode('name', 'Simplify Android SDK')
                root.appendNode('description', 'The Android SDK for Simplify Commerce')
                root.appendNode('url', 'https://www.simplify.com/commerce/docs/sdk/android')

                // adds license info
                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The MIT License')
                license.appendNode('url', 'http://opensource.org/licenses/MIT')
                license.appendNode('distribution', 'repo')

                // adds source control info
                def scm = root.appendNode('scm')
                scm.appendNode('url', 'https://github.com/simplifycom/simplify-android-sdk')
                scm.appendNode('connection', 'https://github.com/simplifycom/simplify-android-sdk.git')

                // adds dependencies
                def dependenciesNode = root.appendNode('dependencies')
                configurations.implementation.allDependencies.each { dp ->
                    if (dp.group) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dp.group)
                        dependencyNode.appendNode('artifactId', dp.name)
                        dependencyNode.appendNode('version', dp.version)

                        if (configurations.optional.allDependencies.contains(dp)) {
                            dependencyNode.appendNode('optional', true)
                        }
                    }
                }

                // adds developer info
                def developers = root.appendNode('developers')
                def dev = developers.appendNode('developer')
                dev.appendNode('id', 'simplifycom')
                dev.appendNode('name', 'Simplify Commerce')
                dev.appendNode('email', 'support@simplify.com')
            }
        }
    }
}


bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['aar']
    publish = true
    pkg {
        repo = 'Android'
        name = 'simplify-android'
        userOrg = 'simplify'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/simplifycom/simplify-android-sdk.git'
        version {
            name = libraryVersionName
        }
    }
}
